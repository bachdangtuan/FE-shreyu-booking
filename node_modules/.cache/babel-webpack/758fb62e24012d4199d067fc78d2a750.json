{"ast":null,"code":"import { TABLEDATA } from './data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared/page-title/page-title/page-title.component\";\nimport * as i2 from \"../../../shared/advanced-table/advanced-table.component\";\nexport let AdvanceComponent = /*#__PURE__*/(() => {\n  class AdvanceComponent {\n    constructor() {\n      this.pageTitle = [];\n      this.records = [];\n      this.columns = [];\n      this.pageSizeOptions = [10, 25, 50, 100];\n    }\n    ngOnInit() {\n      this.pageTitle = [{\n        label: 'Tables',\n        path: '/'\n      }, {\n        label: 'Advanced Table',\n        path: '/',\n        active: true\n      }];\n      this._fetchData();\n      this.initTableCofig();\n    }\n    /**\r\n     * fetches table records\r\n     */\n    _fetchData() {\n      this.records = TABLEDATA;\n    }\n    /**\r\n     * initialize advanced table columns\r\n     */\n    initTableCofig() {\n      this.columns = [{\n        name: 'name',\n        label: 'Name',\n        formatter: record => record.name,\n        width: 245\n      }, {\n        name: 'position',\n        label: 'Position',\n        formatter: record => record.position,\n        width: 360\n      }, {\n        name: 'office',\n        label: 'Office',\n        formatter: record => record.office,\n        width: 180\n      }, {\n        name: 'age',\n        label: 'Age',\n        formatter: record => record.age\n      }, {\n        name: 'date',\n        label: 'Start Date',\n        formatter: record => record.date\n      }, {\n        name: 'salary',\n        label: 'Salary',\n        formatter: record => record.salary\n      }];\n    }\n    // compares two cell values\n    compare(v1, v2) {\n      return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\n    }\n    /**\r\n     * Sort the table data\r\n     * @param event column name, sort direction\r\n     */\n    onSort(event) {\n      if (event.direction === '') {\n        this.records = TABLEDATA;\n      } else {\n        this.records = [...this.records].sort((a, b) => {\n          const res = this.compare(a[event.column], b[event.column]);\n          return event.direction === 'asc' ? res : -res;\n        });\n      }\n    }\n    /**\r\n    * Match table data with search input\r\n    * @param row Table row\r\n    * @param term Search the value\r\n    */\n    matches(row, term) {\n      return row.name.toLowerCase().includes(term) || row.position.toLowerCase().includes(term) || row.office.toLowerCase().includes(term) || String(row.age).includes(term) || row.date.toLowerCase().includes(term) || row.salary.toLowerCase().includes(term);\n    }\n    /**\r\n     * Search Method\r\n    */\n    searchData(searchTerm) {\n      if (searchTerm === '') {\n        this._fetchData();\n      } else {\n        let updatedData = TABLEDATA;\n        //  filter\n        updatedData = updatedData.filter(record => this.matches(record, searchTerm));\n        this.records = updatedData;\n      }\n    }\n  }\n  AdvanceComponent.ɵfac = function AdvanceComponent_Factory(t) {\n    return new (t || AdvanceComponent)();\n  };\n  AdvanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvanceComponent,\n    selectors: [[\"app-advance-table\"]],\n    decls: 10,\n    vars: 8,\n    consts: [[\"title\", \"Advanced Table\", 3, \"breadcrumbItems\"], [1, \"row\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"header-title\"], [1, \"text-muted\", \"font-14\"], [3, \"tableData\", \"columns\", \"pagination\", \"pageSizeOptions\", \"hasRowSelection\", \"isSearchable\", \"isSortable\", \"search\", \"sort\"]],\n    template: function AdvanceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"Advanced table\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\", 6);\n        i0.ɵɵtext(8, \" This table provides functionalities like search and filtering, sorting and pagination \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"app-advanced-table\", 7);\n        i0.ɵɵlistener(\"search\", function AdvanceComponent_Template_app_advanced_table_search_9_listener($event) {\n          return ctx.searchData($event);\n        })(\"sort\", function AdvanceComponent_Template_app_advanced_table_sort_9_listener($event) {\n          return ctx.onSort($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"breadcrumbItems\", ctx.pageTitle);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"tableData\", ctx.records)(\"columns\", ctx.columns)(\"pagination\", true)(\"pageSizeOptions\", ctx.pageSizeOptions)(\"hasRowSelection\", true)(\"isSearchable\", true)(\"isSortable\", true);\n      }\n    },\n    directives: [i1.PageTitleComponent, i2.AdvancedTableComponent],\n    styles: [\"\"]\n  });\n  return AdvanceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}