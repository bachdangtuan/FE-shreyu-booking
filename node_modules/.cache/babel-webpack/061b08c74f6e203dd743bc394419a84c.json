{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction SpinnerComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const variant_r2 = ctx.$implicit;\n    i0.ɵɵclassMapInterpolate1(\"spinner-border text-\", variant_r2, \" m-2\");\n  }\n}\nfunction SpinnerComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const variant_r3 = ctx.$implicit;\n    i0.ɵɵclassMapInterpolate1(\"spinner-grow text-\", variant_r3, \" m-2\");\n  }\n}\nexport let SpinnerComponent = /*#__PURE__*/(() => {\n  class SpinnerComponent {\n    constructor() {\n      this.spinnerVariants = [];\n    }\n    ngOnInit() {\n      this.spinnerVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n    }\n  }\n  SpinnerComponent.ɵfac = function SpinnerComponent_Factory(t) {\n    return new (t || SpinnerComponent)();\n  };\n  SpinnerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpinnerComponent,\n    selectors: [[\"app-ui-spinner\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"mb-1\", \"mt-0\", \"header-title\"], [1, \"col-xl-6\"], [1, \"fs-15\", \"mb-1\"], [1, \"sub-header\"], [\"role\", \"status\", 3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-4\", \"mt-lg-0\"], [\"role\", \"status\"], [1, \"visually-hidden\"]],\n    template: function SpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h4\", 4);\n        i0.ɵɵtext(5, \"Spinners\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 0);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelementStart(9, \"h5\", 6);\n        i0.ɵɵtext(10, \"Border spinner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\", 7);\n        i0.ɵɵtext(12, \"Use the border spinners for a lightweight loading indicator.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\");\n        i0.ɵɵtemplate(14, SpinnerComponent_div_14_Template, 3, 3, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelementStart(16, \"div\", 9);\n        i0.ɵɵelementStart(17, \"h5\", 6);\n        i0.ɵɵtext(18, \"Growing spinner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 7);\n        i0.ɵɵtext(20, \" If you don\\u2019t fancy a border spinner, switch to the grow spinner. While it doesn\\u2019t technically spin, it does repeatedly grow! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\");\n        i0.ɵɵtemplate(22, SpinnerComponent_div_22_Template, 3, 3, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.spinnerVariants);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.spinnerVariants);\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"\"]\n  });\n  return SpinnerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}