{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { AdvancedTableServices } from './advanced-table-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./advanced-table-service.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = [\"theHeaders\"];\nconst _c1 = [\"theContent\"];\nfunction AdvancedTableComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AdvancedTableComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AdvancedTableComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ngb-pagination\", 6);\n    i0.ɵɵlistener(\"pageChange\", function AdvancedTableComponent_div_7_Template_ngb_pagination_pageChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.page = $event;\n    })(\"pageChange\", function AdvancedTableComponent_div_7_Template_ngb_pagination_pageChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.pageChange.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" Hi\\u1EC3n th\\u1ECB \", ctx_r3.limit * (ctx_r3.page - 1), \" t\\u1EDBi \", ctx_r3.limit * (ctx_r3.page - 1) + ctx_r3.limit, \" trong \", ctx_r3.totalItems, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"boundaryLinks\", true)(\"collectionSize\", ctx_r3.totalItems)(\"maxSize\", 4)(\"page\", ctx_r3.page)(\"rotate\", true)(\"pageSize\", ctx_r3.limit);\n  }\n}\nexport let AdvancedTableComponent = /*#__PURE__*/(() => {\n  class AdvancedTableComponent {\n    // @ViewChildren(NgbSortableHeaderDirective) headers!: QueryList<NgbSortableHeaderDirective>;\n    // @ViewChildren('advancedTable') advancedTable!: any;\n    constructor(service, sanitizer, componentFactoryResolver) {\n      this.service = service;\n      this.sanitizer = sanitizer;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.columns = [];\n      this.pageChange = new EventEmitter();\n      this.pagination = false;\n      this.isSearchable = false;\n      this.isSortable = false;\n      this.pageSizeOptions = [];\n      this.tableData = [];\n      // @Input() tableClasses: string = '';\n      // @Input() theadClasses: string = '';\n      this.hasRowSelection = false;\n      this.search = new EventEmitter();\n      this.sort = new EventEmitter();\n      this.handleTableLoad = new EventEmitter();\n      this.selectAll = false;\n      this.isSelected = [];\n    }\n    // ngAfterViewChecked(): void {\n    //     this.handleTableLoad.emit();\n    //\n    // }\n    ngOnInit() {\n      // for (let i = 0; i < this.tableData.length; i++) {\n      //     this.isSelected[i] = false;\n      // }\n    }\n  }\n  AdvancedTableComponent.ɵfac = function AdvancedTableComponent_Factory(t) {\n    return new (t || AdvancedTableComponent)(i0.ɵɵdirectiveInject(i1.AdvancedTableServices), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n  AdvancedTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvancedTableComponent,\n    selectors: [[\"app-advanced-table\"]],\n    contentQueries: function AdvancedTableComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.theHeaders = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.theContent = _t.first);\n      }\n    },\n    inputs: {\n      columns: \"columns\",\n      limit: \"limit\",\n      page: \"page\",\n      totalItems: \"totalItems\",\n      pagination: \"pagination\",\n      isSearchable: \"isSearchable\",\n      isSortable: \"isSortable\",\n      pageSizeOptions: \"pageSizeOptions\",\n      tableData: \"tableData\",\n      hasRowSelection: \"hasRowSelection\"\n    },\n    outputs: {\n      pageChange: \"pageChange\",\n      search: \"search\",\n      sort: \"sort\",\n      handleTableLoad: \"handleTableLoad\"\n    },\n    features: [i0.ɵɵProvidersFeature([AdvancedTableServices])],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"table-responsive\"], [\"id\", \"advancd-table\", 1, \"table\", \"advanced-table\", \"table-nowrap\", \"mb-0\"], [\"advancedTable\", \"\"], [4, \"ngTemplateOutlet\"], [\"class\", \"d-flex flex-wrap justify-content-center align-items-center justify-content-md-between mt-2\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-wrap\", \"justify-content-center\", \"align-items-center\", \"justify-content-md-between\", \"mt-2\"], [1, \"pagination-rounded\", \"custom-pagination\", 3, \"boundaryLinks\", \"collectionSize\", \"maxSize\", \"page\", \"rotate\", \"pageSize\", \"pageChange\"]],\n    template: function AdvancedTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"table\", 1, 2);\n        i0.ɵɵelementStart(3, \"thead\");\n        i0.ɵɵtemplate(4, AdvancedTableComponent_ng_container_4_Template, 1, 0, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"tbody\");\n        i0.ɵɵtemplate(6, AdvancedTableComponent_ng_container_6_Template, 1, 0, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, AdvancedTableComponent_div_7_Template, 4, 9, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.theHeaders);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.theContent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.pagination);\n      }\n    },\n    directives: [i3.NgTemplateOutlet, i3.NgIf, i4.NgbPagination],\n    styles: [\"\"]\n  });\n  return AdvancedTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}