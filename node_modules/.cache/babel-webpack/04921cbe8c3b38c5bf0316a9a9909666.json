{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { loggedInUser } from '../helpers/utils';\nimport { API_URL } from \"../constants/url\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http) {\n      this.http = http;\n      this.user = null;\n    }\n    /**********************************************************\r\n     ********************** API PHẦN USER **********************\r\n     ***********************************************************/\n    // đăng nhập\n    loginUser(user) {\n      return this.http.post(API_URL.LOGIN, user);\n    }\n    // đăng ký\n    createUser(user) {\n      // console.log('user', user)\n      return this.http.post(API_URL.CREATE, user);\n    }\n    // lấy lại mật khẩu\n    resetPassword(email) {\n      // console.log('user', email)\n      return this.http.post(API_URL.RESET_PASSWORD, email);\n    }\n    /**********************************************************\r\n     **********************END API PHẦN USER **********************\r\n     ***********************************************************/\n    /**\r\n     * Returns the current user\r\n     */\n    currentUser() {\n      if (!this.user) {\n        this.user = loggedInUser();\n      }\n      return this.user;\n    }\n    // /**\n    //  * Performs the login auth\n    //  * @param email\n    //  * @param password\n    //  */\n    // login(email: string, password: string): any {\n    //     return this.http.post<any>(`/api/login`, {email, password})\n    //         .pipe(map(user => {\n    //             // login successful if there's a jwt token in the response\n    //             if (user && user.token) {\n    //                 this.user = user;\n    //                 // store user details and jwt in session\n    //                 sessionStorage.setItem('currentUser', JSON.stringify(user));\n    //             }\n    //             return user;\n    //         }));\n    // }\n    /**\r\n     * Performs the signup auth\r\n     * @param name name of user\r\n     * @param email email of user\r\n     * @param password password of user\r\n     */\n    signup(name, email, password) {\n      return this.http.post(`/api/signup`, {\n        name,\n        email,\n        password\n      }).pipe(map(user => user));\n    }\n    /**\r\n     * Logout the user\r\n     */\n    logout() {\n      // remove user from session storage to log user out\n      sessionStorage.removeItem('currentUser');\n      this.user = null;\n    }\n  }\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}