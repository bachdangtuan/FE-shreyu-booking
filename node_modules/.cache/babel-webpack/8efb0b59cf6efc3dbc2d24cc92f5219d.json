{"ast":null,"code":"!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).jsVectorMap = e();\n}(this, function () {\n  \"use strict\";\n\n  Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (t) {\n    for (var e = (this.document || this.ownerDocument).querySelectorAll(t), i = e.length; --i >= 0 && e.item(i) !== this;);\n    return i > -1;\n  }), Object.assign || Object.defineProperty(Object, \"assign\", {\n    enumerable: !1,\n    configurable: !0,\n    writable: !0,\n    value: function (t) {\n      if (null == t) throw new TypeError(\"Cannot convert first argument to object\");\n      for (var e = Object(t), i = 1; i < arguments.length; i++) {\n        var s = arguments[i];\n        if (null != s) {\n          s = Object(s);\n          for (var a = Object.keys(Object(s)), r = 0, n = a.length; r < n; r++) {\n            var o = a[r],\n              h = Object.getOwnPropertyDescriptor(s, o);\n            void 0 !== h && h.enumerable && (e[o] = s[o]);\n          }\n        }\n      }\n      return e;\n    }\n  });\n  var t = {},\n    e = 1,\n    i = function (i, s, a, r) {\n      void 0 === r && (r = {});\n      var n = \"jvm:\" + s + \"::\" + e++;\n      t[n] = {\n        selector: i,\n        handler: a\n      }, a._uid = n, i.addEventListener(s, a, r);\n    },\n    s = function (e, i, s) {\n      var a = i.split(\":\")[1];\n      e.removeEventListener(a, s), delete t[s._uid];\n    },\n    a = function () {\n      return t;\n    },\n    r = function () {\n      function t(t) {\n        return t instanceof Element ? (this.selector = t, this) : (this.selector = document.querySelector(t), this);\n      }\n      var e = t.prototype;\n      return e.on = function (t, e, s) {\n        return void 0 === s && (s = {}), i(this.selector, t, e, s), this;\n      }, e.delegate = function (t, e, i) {\n        for (var s in e = e.split(\" \")) this.on(e[s], function (e) {\n          var s = e.target;\n          s.matches(t) && i.call(s, e);\n        });\n      }, e.css = function (t) {\n        for (var e in t) this.selector.style[e] = t[e];\n        return this;\n      }, e.text = function (t) {\n        return t ? (this.selector.textContent = t, this) : this.selector.textContent;\n      }, e.attr = function (t, e) {\n        return t && e ? (this.selector.setAttribute(t, e), this) : this.selector.getAttribute(t);\n      }, e.addClass = function (t) {\n        return this.selector.classList ? (this.selector.classList.add(t), this) : (-1 == this.selector.className.split(\" \").indexOf(t) && (this.selector.className += \" \" + t), this);\n      }, e.append = function (t) {\n        return this.selector.appendChild(t), this;\n      }, e.show = function () {\n        this.css({\n          display: \"block\"\n        });\n      }, e.hide = function () {\n        this.css({\n          display: \"none\"\n        });\n      }, e.height = function () {\n        return this.selector.offsetHeight;\n      }, e.width = function () {\n        return this.selector.offsetWidth;\n      }, t;\n    }(),\n    n = function (t) {\n      return function (t) {\n        return !!t && \"object\" == typeof t;\n      }(t) && !function (t) {\n        var e = Object.prototype.toString.call(t);\n        return \"[object RegExp]\" === e || \"[object Date]\" === e || function (t) {\n          return t.$$typeof === o;\n        }(t);\n      }(t);\n    };\n  var o = \"function\" == typeof Symbol && Symbol.for ? Symbol.for(\"react.element\") : 60103;\n  function h(t, e) {\n    return !1 !== e.clone && e.isMergeableObject(t) ? d((i = t, Array.isArray(i) ? [] : {}), t, e) : t;\n    var i;\n  }\n  function l(t, e, i) {\n    return t.concat(e).map(function (t) {\n      return h(t, i);\n    });\n  }\n  function c(t) {\n    return Object.keys(t).concat(function (t) {\n      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(t).filter(function (e) {\n        return t.propertyIsEnumerable(e);\n      }) : [];\n    }(t));\n  }\n  function u(t, e) {\n    try {\n      return e in t;\n    } catch (t) {\n      return !1;\n    }\n  }\n  function p(t, e, i) {\n    var s = {};\n    return i.isMergeableObject(t) && c(t).forEach(function (e) {\n      s[e] = h(t[e], i);\n    }), c(e).forEach(function (a) {\n      (function (t, e) {\n        return u(t, e) && !(Object.hasOwnProperty.call(t, e) && Object.propertyIsEnumerable.call(t, e));\n      })(t, a) || (u(t, a) && i.isMergeableObject(e[a]) ? s[a] = function (t, e) {\n        if (!e.customMerge) return d;\n        var i = e.customMerge(t);\n        return \"function\" == typeof i ? i : d;\n      }(a, i)(t[a], e[a], i) : s[a] = h(e[a], i));\n    }), s;\n  }\n  var d = function (t, e, i) {\n      (i = i || {}).arrayMerge = i.arrayMerge || l, i.isMergeableObject = i.isMergeableObject || n, i.cloneUnlessOtherwiseSpecified = h;\n      var s = Array.isArray(e);\n      return s === Array.isArray(t) ? s ? i.arrayMerge(t, e, i) : p(t, e, i) : h(e, i);\n    },\n    f = {\n      isImageUrl: function (t) {\n        return /\\.(jpg|gif|png)$/.test(t);\n      },\n      createElement: function (t, e, i, s) {\n        void 0 === s && (s = !1);\n        var a = document.createElement(t);\n        return i && (a[s ? \"innerHTML\" : \"textContent\"] = i), e && (a.className = e), a;\n      },\n      removeElement: function (t) {\n        t.parentNode.removeChild(t);\n      },\n      $: function (t) {\n        return new r(t);\n      },\n      hyphenate: function (t) {\n        return t.replace(/[\\w]([A-Z])/g, function (t) {\n          return t[0] + \"-\" + t[1];\n        }).toLowerCase();\n      },\n      isFunc: function (t) {\n        return \"function\" == typeof t;\n      },\n      isObj: function (t) {\n        return \"object\" == typeof t;\n      },\n      isStr: function (t) {\n        return \"string\" == typeof t;\n      },\n      isArr: function (t) {\n        return Array.isArray(t);\n      },\n      merge: function (t, e) {\n        return Object.assign(t, e);\n      },\n      mergeDeeply: function (t, e) {\n        return d(t, e);\n      },\n      keys: function (t) {\n        return Object.keys(t);\n      }\n    };\n  function m(t, e) {\n    t.prototype = Object.create(e.prototype), t.prototype.constructor = t, g(t, e);\n  }\n  function g(t, e) {\n    return (g = Object.setPrototypeOf || function (t, e) {\n      return t.__proto__ = e, t;\n    })(t, e);\n  }\n  var v = function () {\n      function t(t, e) {\n        this._name = t, this.node = this.createElement(t), e && this.set(e);\n      }\n      var e = t.prototype;\n      return e.createElement = function (t) {\n        return document.createElementNS(\"http://www.w3.org/2000/svg\", t);\n      }, e.addClass = function (t) {\n        this.node.setAttribute(\"class\", t);\n      }, e.getBBox = function () {\n        return this.node.getBBox();\n      }, e.set = function (t, e) {\n        if (f.isObj(t)) for (var i in t) this.applyAttr(i, t[i]);else this.applyAttr(t, e);\n      }, e.get = function (t) {\n        return this.style.initial[t];\n      }, e.applyAttr = function (t, e) {\n        this.node.setAttribute(f.hyphenate(t), e);\n      }, e.remove = function () {\n        this.node.parentNode.removeChild(this.node);\n      }, t;\n    }(),\n    y = function (t) {\n      function e(e, i, s) {\n        var a;\n        return void 0 === s && (s = {}), (a = t.call(this, e, i) || this).isHovered = !1, a.isSelected = !1, a.style = s, a.style.current = {}, a.updateStyle(), a;\n      }\n      m(e, t);\n      var i = e.prototype;\n      return i.setStyle = function (t, e) {\n        var i;\n        f.isObj(t) ? f.merge(this.style.current, t) : f.merge(this.style.current, ((i = {})[t] = e, i));\n        this.updateStyle();\n      }, i.updateStyle = function () {\n        var t = {};\n        f.merge(t, this.style.initial), f.merge(t, this.style.current), this.isHovered && f.merge(t, this.style.hover), this.isSelected && (f.merge(t, this.style.selected), this.isHovered && f.merge(t, this.style.selectedHover)), this.set(t);\n      }, e;\n    }(v),\n    b = function (t) {\n      function e(e, i) {\n        return t.call(this, \"text\", e, i) || this;\n      }\n      return m(e, t), e.prototype.applyAttr = function (e, i) {\n        \"text\" === e ? this.node.textContent = i : t.prototype.applyAttr.call(this, e, i);\n      }, e;\n    }(y),\n    w = function (t) {\n      function e(e, i) {\n        return t.call(this, \"image\", e, i) || this;\n      }\n      return m(e, t), e.prototype.applyAttr = function (e, i) {\n        var s;\n        \"image\" === e ? (f.isObj(i) ? (s = i.url, this.offset = i.offset || [0, 0]) : (s = i, this.offset = [0, 0]), this.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", s), this.width = 23, this.height = 23, this.applyAttr(\"width\", this.width), this.applyAttr(\"height\", this.height), this.applyAttr(\"x\", this.cx - this.width / 2 + this.offset[0]), this.applyAttr(\"y\", this.cy - this.height / 2 + this.offset[1])) : \"cx\" == e ? (this.cx = i, this.width && this.applyAttr(\"x\", i - this.width / 2 + this.offset[0])) : \"cy\" == e ? (this.cy = i, this.height && this.applyAttr(\"y\", i - this.height / 2 + this.offset[1])) : t.prototype.applyAttr.apply(this, arguments);\n      }, e;\n    }(y),\n    S = function (t) {\n      function e(e) {\n        var i;\n        return (i = t.call(this, \"svg\") || this)._container = e, i._defsElement = new v(\"defs\"), i._rootElement = new v(\"g\", {\n          id: \"jvm-regions-group\"\n        }), i.node.appendChild(i._defsElement.node), i.node.appendChild(i._rootElement.node), i._container.append(i.node), i;\n      }\n      m(e, t);\n      var i = e.prototype;\n      return i.setSize = function (t, e) {\n        this.node.setAttribute(\"width\", t), this.node.setAttribute(\"height\", e);\n      }, i.applyTransformParams = function (t, e, i) {\n        this._rootElement.node.setAttribute(\"transform\", \"scale(\" + t + \") translate(\" + e + \", \" + i + \")\");\n      }, i.createPath = function (t, e) {\n        var i = new y(\"path\", t, e);\n        return i.node.setAttribute(\"fill-rule\", \"evenodd\"), this.add(i);\n      }, i.createCircle = function (t, e, i) {\n        var s = new y(\"circle\", t, e);\n        return this.add(s, i);\n      }, i.createLine = function (t, e, i) {\n        var s = new y(\"line\", t, e);\n        return this.add(s, i);\n      }, i.createText = function (t, e, i) {\n        var s = new b(t, e);\n        return this.add(s, i);\n      }, i.createImage = function (t, e, i) {\n        var s = new w(t, e);\n        return this.add(s, i);\n      }, i.createGroup = function (t) {\n        var e = new v(\"g\");\n        return this.node.appendChild(e.node), t && (e.node.id = t), e.canvas = this, e;\n      }, i.add = function (t, e) {\n        return (e = e || this._rootElement).node.appendChild(t.node), t;\n      }, e;\n    }(v);\n  function k(t, e, i) {\n    var s = f.$(e),\n      a = -1 === s.attr(\"class\").indexOf(\"jvm-region\") ? \"marker\" : \"region\",\n      r = \"region\" === a ? s.attr(\"data-code\") : s.attr(\"data-index\"),\n      n = a + \":selected\";\n    return i && (n = a + \".tooltip:show\"), {\n      event: n,\n      type: a,\n      code: r,\n      element: \"region\" === a ? t.regions[r].element : t.markers[r].element,\n      tooltipText: \"region\" === a ? t.mapData.paths[r].name || \"\" : t.markers[r].config.name || \"\"\n    };\n  }\n  var x = function () {\n      function t() {}\n      var e = t.prototype;\n      return e.getLabelText = function (t, e) {\n        if (e) {\n          if (f.isFunc(e.render)) {\n            var i = [];\n            return this.config.marker && i.push(this.config.marker), i.push(t), e.render.apply(this, i);\n          }\n          return t;\n        }\n      }, e.getLabelOffsets = function (t, e) {\n        return f.isFunc(e.offsets) ? e.offsets(t) : f.isArr(e.offsets) ? e.offsets[t] : [0, 0];\n      }, e.setStyle = function (t, e) {\n        this.shape.setStyle(t, e);\n      }, e.remove = function () {\n        this.shape.remove(), this.label && this.label.remove();\n      }, e.hover = function (t) {\n        this._setStatus(\"isHovered\", t);\n      }, e.select = function (t) {\n        this._setStatus(\"isSelected\", t);\n      }, e._setStatus = function (t, e) {\n        this.shape[t] = e, this.shape.updateStyle(), this[t] = e, this.label && (this.label[t] = e, this.label.updateStyle());\n      }, t;\n    }(),\n    M = function (t) {\n      function e(e) {\n        var i,\n          s = e.map,\n          a = e.code,\n          r = e.path,\n          n = e.style,\n          o = e.label,\n          h = e.labelStyle,\n          l = e.labelsGroup;\n        (i = t.call(this) || this).config = arguments[0], i.canvas = s.canvas, i.map = s, i.shape = i.canvas.createPath({\n          d: r,\n          dataCode: a\n        }, n), i.shape.addClass(\"jvm-region jvm-element\");\n        var c = i.shape.getBBox(),\n          u = i.getLabelText(a, o);\n        if (o && u) {\n          var p = i.getLabelOffsets(a);\n          i.labelX = c.x + c.width / 2 + p[0], i.labelY = c.y + c.height / 2 + p[1], i.label = i.canvas.createText({\n            text: u,\n            textAnchor: \"middle\",\n            alignmentBaseline: \"central\",\n            dataCode: a,\n            x: i.labelX,\n            y: i.labelY\n          }, h, l), i.label.addClass(\"jvm-region jvm-element\");\n        }\n        return i;\n      }\n      return m(e, t), e.prototype.updateLabelPosition = function () {\n        this.label && this.label.set({\n          x: this.labelX * this.map.scale + this.map.transX * this.map.scale,\n          y: this.labelY * this.map.scale + this.map.transY * this.map.scale\n        });\n      }, e;\n    }(x);\n  var _ = function (t) {\n    function e(e) {\n      var i,\n        s = e.index,\n        a = e.map,\n        r = e.style,\n        n = e.x1,\n        o = e.y1,\n        h = e.x2,\n        l = e.y2,\n        c = e.group;\n      return (i = t.call(this) || this).shape = a.canvas.createLine({\n        x1: n,\n        y1: o,\n        x2: h,\n        y2: l,\n        dataIndex: s\n      }, r, c), i.shape.addClass(\"jvm-line\"), i;\n    }\n    return m(e, t), e;\n  }(x);\n  function j(t, e) {\n    return t.toLowerCase() + \":to:\" + e.toLowerCase();\n  }\n  var E = function (t) {\n    function e(e) {\n      var i,\n        s = e.index,\n        a = e.style,\n        r = e.label,\n        n = e.cx,\n        o = e.cy,\n        h = e.map,\n        l = e.group;\n      return (i = t.call(this) || this)._map = h, i._isImage = !!a.initial.image, i.config = arguments[0], i.shape = h.canvas[i._isImage ? \"createImage\" : \"createCircle\"]({\n        dataIndex: s,\n        cx: n,\n        cy: o\n      }, i._getStyle(), l), i.shape.addClass(\"jvm-marker jvm-element\"), i._isImage && i.updateLabelPosition(), r && i._createLabel(i.config), i;\n    }\n    m(e, t);\n    var i = e.prototype;\n    return i.updateLabelPosition = function () {\n      this.label && this.label.set({\n        x: this._labelX * this._map.scale + this._offsets[0] + this._map.transX * this._map.scale + 5 + (this._isImage ? (this.shape.width || 0) / 2 : this.shape.node.r.baseVal.value),\n        y: this._labelY * this._map.scale + this._map.transY * this._map.scale + this._offsets[1]\n      });\n    }, i._createLabel = function (t) {\n      var e = t.index,\n        i = t.map,\n        s = t.label,\n        a = t.labelsGroup,\n        r = t.cx,\n        n = t.cy,\n        o = t.marker,\n        h = t.isRecentlyCreated,\n        l = this.getLabelText(e, s);\n      this._labelX = r / i.scale - i.transX, this._labelY = n / i.scale - i.transY, this._offsets = h && o.offsets ? o.offsets : this.getLabelOffsets(e, s), this.label = i.canvas.createText({\n        text: l,\n        dataIndex: e,\n        x: this._labelX,\n        y: this._labelY,\n        dy: \"0.6ex\"\n      }, i.params.markerLabelStyle, a), this.label.addClass(\"jvm-marker jvm-element\"), h && this.updateLabelPosition();\n    }, i._getStyle = function () {\n      var t = {};\n      return this._isImage ? t.initial = {\n        image: this.config.style.initial.image\n      } : t = this.config.style, t;\n    }, e;\n  }(x);\n  var O = function () {\n      function t(t) {\n        void 0 === t && (t = {}), this._options = t, this._map = this._options.map, this._series = this._options.series, this._body = f.createElement(\"div\", \"jvm-legend\"), this._options.cssClass && this._body.setAttribute(\"class\", this._options.cssClass), t.vertical ? this._map.legendVertical.appendChild(this._body) : this._map.legendHorizontal.appendChild(this._body), this.render();\n      }\n      return t.prototype.render = function () {\n        var t,\n          e,\n          i,\n          s = this._series.scale.getTicks(),\n          a = f.createElement(\"div\", \"jvm-legend-inner\");\n        if (this._body.innderHTML = \"\", this._options.title) {\n          var r = f.createElement(\"div\", \"jvm-legend-title\", this._options.title);\n          this._body.appendChild(r);\n        }\n        this._body.appendChild(a);\n        for (var n = 0; n < s.length; n++) {\n          switch (t = f.createElement(\"div\", \"jvm-legend-tick\"), e = f.createElement(\"div\", \"jvm-legend-tick-sample\"), this._series.config.attribute) {\n            case \"fill\":\n              f.isImageUrl(s[n].value) ? e.style.background = \"url(\" + s[n].value + \")\" : e.style.background = s[n].value;\n              break;\n            case \"stroke\":\n              e.style.background = s[n].value;\n              break;\n            case \"image\":\n              e.style.background = \"url(\" + (f.isObj(s[n].value) ? s[n].value.url : s[n].value) + \") no-repeat center center\", e.style.backgroundSize = \"cover\";\n          }\n          t.appendChild(e), i = s[n].label, this._options.labelRender && (i = this._options.labelRender(i));\n          var o = f.createElement(\"div\", \"jvm-legend-tick-text\", i);\n          t.appendChild(o), a.appendChild(t);\n        }\n      }, t;\n    }(),\n    C = function () {\n      function t(t) {\n        this._scale = t;\n      }\n      var e = t.prototype;\n      return e.getValue = function (t) {\n        return this._scale[t];\n      }, e.getTicks = function () {\n        var t = [];\n        for (var e in this._scale) t.push({\n          label: e,\n          value: this._scale[e]\n        });\n        return t;\n      }, t;\n    }(),\n    X = function () {\n      function t(t, e, i) {\n        void 0 === t && (t = {}), this._map = i, this._elements = e, this._values = t.values || {}, this.config = t, this.config.attribute = t.attribute || \"fill\", t.attributes && this.setAttributes(t.attributes), f.isObj(t.scale) && (this.scale = new C(t.scale)), this.config.legend && (this.legend = new O(f.merge({\n          map: this._map,\n          series: this\n        }, this.config.legend))), this.setValues(this._values);\n      }\n      var e = t.prototype;\n      return e.setValues = function (t) {\n        var e = {};\n        for (var i in t) t[i] && (e[i] = this.scale.getValue(t[i]));\n        this.setAttributes(e);\n      }, e.setAttributes = function (t) {\n        for (var e in t) this._elements[e] && this._elements[e].element.setStyle(this.config.attribute, t[e]);\n      }, e.clear = function () {\n        var t,\n          e = {};\n        for (t in this._values) this._elements[t] && (e[t] = this._elements[t].element.shape.style.initial[this.config.attribute]);\n        this.setAttributes(e), this._values = {};\n      }, t;\n    }();\n  var Y = {\n    mill: function (t, e, i) {\n      return {\n        x: this.radius * (e - i) * this.radDeg,\n        y: -this.radius * Math.log(Math.tan((45 + .4 * t) * this.radDeg)) / .8\n      };\n    },\n    merc: function (t, e, i) {\n      return {\n        x: this.radius * (e - i) * this.radDeg,\n        y: -this.radius * Math.log(Math.tan(Math.PI / 4 + t * Math.PI / 360))\n      };\n    },\n    aea: function (t, e, i) {\n      var s = i * this.radDeg,\n        a = 29.5 * this.radDeg,\n        r = 45.5 * this.radDeg,\n        n = t * this.radDeg,\n        o = e * this.radDeg,\n        h = (Math.sin(a) + Math.sin(r)) / 2,\n        l = Math.cos(a) * Math.cos(a) + 2 * h * Math.sin(a),\n        c = h * (o - s),\n        u = Math.sqrt(l - 2 * h * Math.sin(n)) / h,\n        p = Math.sqrt(l - 2 * h * Math.sin(0)) / h;\n      return {\n        x: u * Math.sin(c) * this.radius,\n        y: -(p - u * Math.cos(c)) * this.radius\n      };\n    },\n    lcc: function (t, e, i) {\n      var s = i * this.radDeg,\n        a = e * this.radDeg,\n        r = 33 * this.radDeg,\n        n = 45 * this.radDeg,\n        o = t * this.radDeg,\n        h = Math.log(Math.cos(r) * (1 / Math.cos(n))) / Math.log(Math.tan(Math.PI / 4 + n / 2) * (1 / Math.tan(Math.PI / 4 + r / 2))),\n        l = Math.cos(r) * Math.pow(Math.tan(Math.PI / 4 + r / 2), h) / h,\n        c = l * Math.pow(1 / Math.tan(Math.PI / 4 + o / 2), h),\n        u = l * Math.pow(1 / Math.tan(Math.PI / 4 + 0), h);\n      return {\n        x: c * Math.sin(h * (a - s)) * this.radius,\n        y: -(u - c * Math.cos(h * (a - s))) * this.radius\n      };\n    }\n  };\n  Y.degRad = 180 / Math.PI, Y.radDeg = Math.PI / 180, Y.radius = 6381372;\n  var L = function () {\n    function t(t, e) {\n      var i = t.scale,\n        s = t.values;\n      this._scale = i, this._values = s, this._fromColor = this.hexToRgb(i[0]), this._toColor = this.hexToRgb(i[1]), this._map = e, this.setMinMaxValues(s), this.visualize();\n    }\n    var e = t.prototype;\n    return e.setMinMaxValues = function (t) {\n      for (var e in this.min = Number.MAX_VALUE, this.max = 0, t) (e = parseFloat(t[e])) > this.max && (this.max = e), e < this.min && (this.min = e);\n    }, e.visualize = function () {\n      var t,\n        e = {};\n      for (var i in this._values) t = parseFloat(this._values[i]), isNaN(t) || (e[i] = this.getValue(t));\n      this.setAttributes(e);\n    }, e.setAttributes = function (t) {\n      for (var e in t) this._map.regions[e] && this._map.regions[e].element.setStyle(\"fill\", t[e]);\n    }, e.getValue = function (t) {\n      for (var e, i = \"#\", s = 0; s < 3; s++) i += (1 === (e = Math.round(this._fromColor[s] + (this._toColor[s] - this._fromColor[s]) * ((t - this.min) / (this.max - this.min))).toString(16)).length ? \"0\" : \"\") + e;\n      return i;\n    }, e.hexToRgb = function (t) {\n      var e = 0,\n        i = 0,\n        s = 0;\n      return 4 == t.length ? (e = \"0x\" + t[1] + t[1], i = \"0x\" + t[2] + t[2], s = \"0x\" + t[3] + t[3]) : 7 == t.length && (e = \"0x\" + t[1] + t[2], i = \"0x\" + t[3] + t[4], s = \"0x\" + t[5] + t[6]), [parseInt(e), parseInt(i), parseInt(s)];\n    }, t;\n  }();\n  var T = Object.freeze({\n      __proto__: null,\n      handleContainerEvents: function () {\n        var t,\n          e,\n          i = this,\n          s = !1,\n          a = this;\n        this.params.draggable && (this.container.on(\"mousemove\", function (r) {\n          return s && (a.transX -= (t - r.pageX) / a.scale, a.transY -= (e - r.pageY) / a.scale, a.applyTransform(), t = r.pageX, e = r.pageY, i.isBeingDragged = !0), !1;\n        }).on(\"mousedown\", function (i) {\n          return s = !0, t = i.pageX, e = i.pageY, !1;\n        }), f.$(\"body\").on(\"mouseup\", function () {\n          s = !1;\n        })), this.params.zoomOnScroll && this.container.on(\"wheel\", function (t) {\n          var e = 0;\n          e = (t.deltaY || -t.wheelDelta || t.detail) >> 10 || 1, e *= 75;\n          var s = i.container.selector.getBoundingClientRect(),\n            r = t.pageX - s.left - window.pageXOffset,\n            n = t.pageY - s.top - window.pageYOffset,\n            o = Math.pow(1 + a.params.zoomOnScrollSpeed / 1e3, -1.5 * e);\n          a.tooltip && a.tooltip.hide(), a.setScale(a.scale * o, r, n);\n        }, {\n          passive: !0\n        });\n      },\n      handleElementEvents: function () {\n        var t = this,\n          e = this;\n        this.container.delegate(\".jvm-element\", \"mousedown\", function () {\n          t.isBeingDragged = !1;\n        }), this.container.delegate(\".jvm-element\", \"mouseover mouseout\", function (t) {\n          var i = k(e, this, !0),\n            s = e.params.showTooltip;\n          \"mouseover\" === t.type ? t.defaultPrevented || (i.element.hover(!0), s && (e.tooltip.text(i.tooltipText), e.tooltip.show(), e.emit(i.event, [e.tooltip, i.code]))) : (i.element.hover(!1), s && e.tooltip.hide());\n        }), this.container.delegate(\".jvm-element\", \"mouseup\", function (t) {\n          var i = k(e, this);\n          if (!e.isBeingDragged && !t.defaultPrevented && (\"region\" === i.type && e.params.regionsSelectable || \"marker\" === i.type && e.params.markersSelectable)) {\n            var s = i.element;\n            e.params[i.type + \"sSelectableOne\"] && e.clearSelected(i.type + \"s\"), i.element.isSelected ? s.select(!1) : s.select(!0), e.emit(i.event, [i.code, s.isSelected, e.getSelected(i.type + \"s\")]);\n          }\n        });\n      },\n      handleZoomButtons: function () {\n        var t = this,\n          e = this,\n          s = f.createElement(\"div\", \"jvm-zoom-btn jvm-zoomin\", \"&#43;\", !0),\n          a = f.createElement(\"div\", \"jvm-zoom-btn jvm-zoomout\", \"&#x2212\", !0);\n        this.container.append(s).append(a), i(s, \"click\", function () {\n          t.setScale(e.scale * e.params.zoomStep, e.width / 2, e.height / 2, !1, e.params.zoomAnimate);\n        }), i(a, \"click\", function () {\n          t.setScale(e.scale / e.params.zoomStep, e.width / 2, e.height / 2, !1, e.params.zoomAnimate);\n        });\n      },\n      bindContainerTouchEvents: function () {\n        var t,\n          e,\n          i,\n          s,\n          a,\n          r,\n          n,\n          o = this,\n          h = function (h) {\n            var l,\n              c,\n              u,\n              p,\n              d = h.touches;\n            if (\"touchstart\" == h.type && (n = 0), 1 == d.length) 1 == n && (u = o.transX, p = o.transY, o.transX -= (i - d[0].pageX) / o.scale, o.transY -= (s - d[0].pageY) / o.scale, o.tooltip.hide(), o.applyTransform(), u == o.transX && p == o.transY || h.preventDefault()), i = d[0].pageX, s = d[0].pageY;else if (2 == d.length) if (2 == n) c = Math.sqrt(Math.pow(d[0].pageX - d[1].pageX, 2) + Math.pow(d[0].pageY - d[1].pageY, 2)) / e, o.setScale(t * c, a, r), o.tooltip.hide(), h.preventDefault();else {\n              var f = o.container.selector.getBoundingClientRect();\n              l = {\n                top: f.top + window.scrollY,\n                left: f.left + window.scrollX\n              }, a = d[0].pageX > d[1].pageX ? d[1].pageX + (d[0].pageX - d[1].pageX) / 2 : d[0].pageX + (d[1].pageX - d[0].pageX) / 2, r = d[0].pageY > d[1].pageY ? d[1].pageY + (d[0].pageY - d[1].pageY) / 2 : d[0].pageY + (d[1].pageY - d[0].pageY) / 2, a -= l.left, r -= l.top, t = o.scale, e = Math.sqrt(Math.pow(d[0].pageX - d[1].pageX, 2) + Math.pow(d[0].pageY - d[1].pageY, 2));\n            }\n            n = d.length;\n          };\n        this.container.on(\"touchstart\", h).on(\"touchmove\", h);\n      },\n      createRegions: function () {\n        var t, e;\n        for (t in this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.createGroup(\"jvm-regions-labels-group\"), this.mapData.paths) e = new M({\n          map: this,\n          code: t,\n          path: this.mapData.paths[t].path,\n          style: f.merge({}, this.params.regionStyle),\n          labelStyle: this.params.regionLabelStyle,\n          labelsGroup: this.regionLabelsGroup,\n          label: this.params.labels && this.params.labels.regions\n        }), this.regions[t] = {\n          config: this.mapData.paths[t],\n          element: e\n        };\n      },\n      createLines: function (t, e, i) {\n        var s = this;\n        void 0 === i && (i = !1);\n        var a,\n          r = !1,\n          n = !1;\n        for (var o in this.linesGroup = this.linesGroup || this.canvas.createGroup(\"jvm-lines-group\"), t) {\n          var h = t[o];\n          for (var l in e) {\n            var c = i ? e[l].config : e[l];\n            c.name === h.from && (r = this.getMarkerPosition(c)), c.name === h.to && (n = this.getMarkerPosition(c));\n          }\n          !1 !== r && !1 !== n && (a = new _({\n            index: o,\n            map: this,\n            style: f.mergeDeeply({\n              initial: this.params.lineStyle\n            }, {\n              initial: h.style || {}\n            }),\n            x1: r.x,\n            y1: r.y,\n            x2: n.x,\n            y2: n.y,\n            group: this.linesGroup\n          }), i && Object.keys(this.lines).forEach(function (e) {\n            e === j(t[0].from, t[0].to) && s.lines[e].element.remove();\n          }), this.lines[j(h.from, h.to)] = {\n            element: a,\n            config: h\n          });\n        }\n      },\n      createMarkers: function (t, e) {\n        var i,\n          s,\n          a,\n          r,\n          n = this;\n        for (var o in void 0 === t && (t = {}), void 0 === e && (e = !1), this.markersGroup = this.markersGroup || this.canvas.createGroup(\"jvm-markers-group\"), this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.createGroup(\"jvm-markers-labels-group\"), t) {\n          if (i = t[o], a = this.getMarkerPosition(i), r = i.coords.join(\":\"), e) {\n            if (f.keys(this.markers).filter(function (t) {\n              return n.markers[t]._uid === r;\n            }).length) continue;\n            o = f.keys(this.markers).length;\n          }\n          !1 !== a && (s = new E({\n            index: o,\n            map: this,\n            style: f.mergeDeeply(this.params.markerStyle, {\n              initial: i.style || {}\n            }),\n            label: this.params.labels && this.params.labels.markers,\n            labelsGroup: this.markerLabelsGroup,\n            cx: a.x,\n            cy: a.y,\n            group: this.markersGroup,\n            marker: i,\n            isRecentlyCreated: e\n          }), this.markers[o] && this.removeMarkers([o]), this.markers[o] = {\n            _uid: r,\n            config: i,\n            element: s\n          });\n        }\n      },\n      createTooltip: function () {\n        var t = this,\n          e = f.createElement(\"div\", \"jvm-tooltip\");\n        this.tooltip = f.$(document.body.appendChild(e)), this.container.on(\"mousemove\", function (i) {\n          if (\"block\" === t.tooltip.selector.style.display) {\n            var s = t.container.selector.querySelector(\"#jvm-regions-group\").getBoundingClientRect(),\n              a = e.getBoundingClientRect(),\n              r = a.height,\n              n = a.width,\n              o = i.clientY <= s.top + r + 5,\n              h = i.pageY - r - 5,\n              l = i.pageX - n - 5;\n            o && (h += r + 5, l -= 10), i.clientX < s.left + n + 5 && (l = i.pageX + 5 + 2, o && (l += 10)), t.tooltip.css({\n              top: h + \"px\",\n              left: l + \"px\"\n            });\n          }\n        });\n      },\n      createSeries: function () {\n        for (var t in this.series = {\n          markers: [],\n          regions: []\n        }, this.params.series) for (var e = 0; e < this.params.series[t].length; e++) this.series[t][e] = new X(this.params.series[t][e], this[t], this);\n      },\n      applyTransform: function () {\n        var t, e, i, s;\n        this.defaultWidth * this.scale <= this.width ? (t = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), i = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (t = 0, i = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (e = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), s = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (e = 0, s = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > e ? this.transY = e : this.transY < s && (this.transY = s), this.transX > t ? this.transX = t : this.transX < i && (this.transX = i), this.canvas.applyTransformParams(this.scale, this.transX, this.transY), this.markers && this.repositionMarkers(), this.lines && this.repositionLines(), this.repositionLabels();\n      },\n      setFocus: function (t) {\n        var e = this;\n        void 0 === t && (t = {});\n        var i,\n          s = [];\n        if (t.region ? s.push(t.region) : t.regions && (s = t.regions), s.length) return s.forEach(function (t) {\n          if (e.regions[t]) {\n            var s = e.regions[t].element.shape.getBBox();\n            s && (i = void 0 === i ? s : {\n              x: Math.min(i.x, s.x),\n              y: Math.min(i.y, s.y),\n              width: Math.max(i.x + i.width, s.x + s.width) - Math.min(i.x, s.x),\n              height: Math.max(i.y + i.height, s.y + s.height) - Math.min(i.y, s.y)\n            });\n          }\n        }), this.setScale(Math.min(this.width / i.width, this.height / i.height), -(i.x + i.width / 2), -(i.y + i.height / 2), !0, t.animate);\n        if (t.coords) {\n          var a = this.coordsToPoint(t.coords[0], t.coords[1]),\n            r = this.transX - a.x / this.scale,\n            n = this.transY - a.y / this.scale;\n          return this.setScale(t.scale * this.baseScale, r, n, !0, t.animate);\n        }\n      },\n      resize: function () {\n        var t = this.baseScale;\n        this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / t, this.transX *= this.baseScale / t, this.transY *= this.baseScale / t;\n      },\n      setScale: function (t, e, i, s, a) {\n        var r,\n          n,\n          o,\n          h,\n          l,\n          c,\n          u,\n          p,\n          d,\n          f,\n          m = this,\n          g = 0,\n          v = Math.abs(Math.round(60 * (t - this.scale) / Math.max(t, this.scale)));\n        t > this.params.zoomMax * this.baseScale ? t = this.params.zoomMax * this.baseScale : t < this.params.zoomMin * this.baseScale && (t = this.params.zoomMin * this.baseScale), void 0 !== e && void 0 !== i && (r = t / this.scale, s ? (d = e + this.defaultWidth * (this.width / (this.defaultWidth * t)) / 2, f = i + this.defaultHeight * (this.height / (this.defaultHeight * t)) / 2) : (d = this.transX - (r - 1) / t * e, f = this.transY - (r - 1) / t * i)), a && v > 0 ? (o = this.scale, h = (t - o) / v, l = this.transX * this.scale, u = this.transY * this.scale, c = (d * t - l) / v, p = (f * t - u) / v, n = setInterval(function () {\n          g += 1, m.scale = o + h * g, m.transX = (l + c * g) / m.scale, m.transY = (u + p * g) / m.scale, m.applyTransform(), g == v && (clearInterval(n), m.emit(\"viewport:changed\", [m.scale, m.transX, m.transY]));\n        }, 10)) : (this.transX = d, this.transY = f, this.scale = t, this.applyTransform(), this.emit(\"viewport:changed\", [this.scale, this.transX, this.transY]));\n      },\n      updateSize: function () {\n        this.width = this.container.width(), this.height = this.container.height(), this.resize(), this.canvas.setSize(this.width, this.height), this.applyTransform();\n      },\n      coordsToPoint: function (t, e) {\n        var i,\n          s,\n          a,\n          r = z.maps[this.params.map].projection,\n          n = r.centralMeridian;\n        return i = Y[r.type](t, e, n), !!(s = this.getInsetForPoint(i.x, i.y)) && (a = s.bbox, i.x = (i.x - a[0].x) / (a[1].x - a[0].x) * s.width * this.scale, i.y = (i.y - a[0].y) / (a[1].y - a[0].y) * s.height * this.scale, {\n          x: i.x + this.transX * this.scale + s.left * this.scale,\n          y: i.y + this.transY * this.scale + s.top * this.scale\n        });\n      },\n      getInsetForPoint: function (t, e) {\n        var i,\n          s,\n          a = z.maps[this.params.map].insets;\n        for (i = 0; i < a.length; i++) if (t > (s = a[i].bbox)[0].x && t < s[1].x && e > s[0].y && e < s[1].y) return a[i];\n      },\n      getMarkerPosition: function (t) {\n        var e = t.coords;\n        return z.maps[this.params.map].projection ? this.coordsToPoint.apply(this, e) : {\n          x: e[0] * this.scale + this.transX * this.scale,\n          y: e[1] * this.scale + this.transY * this.scale\n        };\n      },\n      repositionLines: function () {\n        var t = !1,\n          e = !1;\n        for (var i in this.lines) {\n          for (var s in this.markers) {\n            var a = this.markers[s];\n            a.config.name === this.lines[i].config.from && (t = this.getMarkerPosition(a.config)), a.config.name === this.lines[i].config.to && (e = this.getMarkerPosition(a.config));\n          }\n          !1 !== t && !1 !== e && this.lines[i].element.setStyle({\n            x1: t.x,\n            y1: t.y,\n            x2: e.x,\n            y2: e.y\n          });\n        }\n      },\n      repositionMarkers: function () {\n        var t;\n        for (var e in this.markers) !1 !== (t = this.getMarkerPosition(this.markers[e].config)) && this.markers[e].element.setStyle({\n          cx: t.x,\n          cy: t.y\n        });\n      },\n      repositionLabels: function () {\n        var t = this.params.labels;\n        if (t) {\n          if (t.regions) for (var e in this.regions) this.regions[e].element.updateLabelPosition();\n          if (t.markers) for (var i in this.markers) this.markers[i].element.updateLabelPosition();\n        }\n      },\n      visualizeData: function (t) {\n        f.isObj(t) && (this.dataVisualization = new L(t, this));\n      }\n    }),\n    A = {\n      onViewportChange: \"viewport:changed\",\n      onRegionSelected: \"region:selected\",\n      onMarkerSelected: \"marker:selected\",\n      onRegionTooltipShow: \"region.tooltip:show\",\n      onMarkerTooltipShow: \"marker.tooltip:show\",\n      onLoaded: \"map:loaded\",\n      onDestroyed: \"map:destroyed\"\n    },\n    z = function () {\n      function t(e) {\n        if (void 0 === e && (e = {}), this.params = f.mergeDeeply(t.defaults, e), !t.maps[this.params.map]) throw new Error(\"Attempt to use map which was not loaded: \" + e.map);\n        this.mapData = t.maps[this.params.map], this.regions = {}, this.markers = {}, this.lines = {}, this.defaultWidth = this.mapData.width, this.defaultHeight = this.mapData.height, this.height = 0, this.width = 0, this.scale = 1, this.baseScale = 1, this.transX = 0, this.transY = 0, this.baseTransX = 0, this.baseTransY = 0, this.isBeingDragged = !1, this.selector = e.selector, \"loading\" !== window.document.readyState ? this.init(e.selector) : window.addEventListener(\"DOMContentLoaded\", this.init.bind(this, e.selector));\n      }\n      var e = t.prototype;\n      return e.init = function (t) {\n        var e = this.params;\n        this.container = f.$(t).addClass(\"jvm-container\"), this.canvas = new S(this.container, this.width, this.height), this.setBackgroundColor(e.backgroundColor), this.handleContainerEvents(), this.createRegions(), this.updateSize(), this.createLines(e.lines || {}, e.markers || {}), this.createMarkers(e.markers), this.handleElementEvents(), this.repositionLabels(), e.showTooltip && this.createTooltip(), e.zoomButtons && this.handleZoomButtons(), e.selectedRegions && this.setSelected(\"regions\", e.selectedRegions), e.selectedMarkers && this.setSelected(\"markers\", e.selectedMarkers), e.focusOn && this.setFocus(e.focusOn), e.visualizeData && this.visualizeData(e.visualizeData), e.bindTouchEvents && (\"ontouchstart\" in window || window.DocumentTouch && document instanceof DocumentTouch) && this.bindContainerTouchEvents(), e.series && (this.container.append(this.legendHorizontal = f.createElement(\"div\", \"jvm-series-container jvm-series-h\")).append(this.legendVertical = f.createElement(\"div\", \"jvm-series-container jvm-series-v\")), this.createSeries()), this.emit(\"map:loaded\", [this]);\n      }, e.emit = function (t, e) {\n        for (var i in A) A[i] === t && f.isFunc(this.params[i]) && this.params[i].apply(this, e);\n      }, e.setBackgroundColor = function (t) {\n        this.container.css({\n          backgroundColor: t\n        });\n      }, e.getSelected = function (t) {\n        var e,\n          i = [];\n        for (e in this[t]) this[t][e].element.isSelected && i.push(e);\n        return i;\n      }, e.clearSelected = function (t) {\n        var e = this;\n        this.getSelected(t).forEach(function (i) {\n          e[t][i].element.select(!1);\n        });\n      }, e.setSelected = function (t, e) {\n        var i = this;\n        e.forEach(function (e) {\n          i[t][e] && i[t][e].element.select(!0);\n        });\n      }, e.getSelectedRegions = function () {\n        return this.getSelected(\"regions\");\n      }, e.clearSelectedRegions = function () {\n        var t = this;\n        this.getSelected(\"regions\").forEach(function (e) {\n          t.regions[e].element.select(!1);\n        });\n      }, e.getSelectedMarkers = function () {\n        return this.getSelected(\"markers\");\n      }, e.clearSelectedMarkers = function () {\n        var t = this;\n        this.getSelected(\"markers\").forEach(function (e) {\n          t.markers[e].element.select(!1);\n        });\n      }, e.addMarker = function (t) {\n        console.warn(\"`addMarker` method is depreacted, please use `addMarkers` instead.\"), this.createMarkers([t], !0);\n      }, e.addMarkers = function (t) {\n        if (\"object\" == typeof t) return this.createMarkers([t], !0);\n        this.createMarkers(t, !0);\n      }, e.removeMarkers = function (t) {\n        var e = this;\n        t || (t = Object.keys(this.markers)), t.forEach(function (t) {\n          e.markers[t].element.remove(), delete e.markers[t];\n        });\n      }, e.addLine = function (t, e, i) {\n        void 0 === i && (i = {}), this.createLines([{\n          from: t,\n          to: e,\n          style: i\n        }], this.markers, !0);\n      }, e.reset = function () {\n        for (var t in this.series) for (var e = 0; e < this.series[t].length; e++) this.series[t][e].clear();\n        this.legendHorizontal && (f.removeElement(this.legendHorizontal), this.legendHorizontal = null), this.legendVertical && (f.removeElement(this.legendVertical), this.legendVertical = null), this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform(), this.clearSelectedMarkers(), this.clearSelectedRegions(), this.removeMarkers();\n      }, e.destroy = function (t) {\n        var e = this;\n        void 0 === t && (t = !0);\n        var i = a(),\n          r = this.tooltip.selector,\n          n = Object.keys;\n        f.removeElement(r), n(i).forEach(function (t) {\n          s(i[t].selector, t, i[t].handler);\n        }), this.emit(\"map:destroyed\"), t && n(this).forEach(function (t) {\n          try {\n            delete e[t];\n          } catch (t) {}\n        });\n      }, e.extend = function (e, i) {\n        t.prototype[e] = i;\n      }, e.getUtils = function () {\n        return f;\n      }, t;\n    }();\n  z.maps = {}, z.defaults = {\n    map: \"world\",\n    backgroundColor: \"tranparent\",\n    draggable: !0,\n    zoomButtons: !0,\n    zoomOnScroll: !0,\n    zoomOnScrollSpeed: 3,\n    zoomMax: 12,\n    zoomMin: 1,\n    zoomAnimate: !0,\n    showTooltip: !0,\n    zoomStep: 1.5,\n    bindTouchEvents: !0,\n    lineStyle: {\n      stroke: \"#808080\",\n      strokeWidth: 1,\n      strokeLinecap: \"round\"\n    },\n    markersSelectable: !1,\n    markersSelectableOne: !1,\n    markerStyle: {\n      initial: {\n        r: 7,\n        fill: \"#374151\",\n        fillOpacity: 1,\n        stroke: \"#FFF\",\n        strokeWidth: 5,\n        strokeOpacity: .5\n      },\n      hover: {\n        fill: \"#3cc0ff\",\n        cursor: \"pointer\"\n      },\n      selected: {\n        fill: \"blue\"\n      },\n      selectedHover: {}\n    },\n    markerLabelStyle: {\n      initial: {\n        fontFamily: \"Verdana\",\n        fontSize: 12,\n        fontWeight: 500,\n        cursor: \"default\",\n        fill: \"#374151\"\n      },\n      hover: {\n        cursor: \"pointer\"\n      },\n      selected: {},\n      selectedHover: {}\n    },\n    regionsSelectable: !1,\n    regionsSelectableOne: !1,\n    regionStyle: {\n      initial: {\n        fill: \"#dee2e8\",\n        fillOpacity: 1,\n        stroke: \"none\",\n        strokeWidth: 0\n      },\n      hover: {\n        fillOpacity: .7,\n        cursor: \"pointer\"\n      },\n      selected: {\n        fill: \"#9ca3af\"\n      },\n      selectedHover: {}\n    },\n    regionLabelStyle: {\n      initial: {\n        fontFamily: \"Verdana\",\n        fontSize: \"12\",\n        fontWeight: \"bold\",\n        cursor: \"default\",\n        fill: \"#35373e\"\n      },\n      hover: {\n        cursor: \"pointer\"\n      }\n    }\n  }, Object.assign(z.prototype, T);\n  var D = function () {\n    function t(t) {\n      if (void 0 === t && (t = {}), !t.selector) throw new Error(\"Selector is not given.\");\n      return new z(t);\n    }\n    return t.prototype.addMap = function (t, e) {\n      z.maps[t] = e;\n    }, t;\n  }();\n  return window.jsVectorMap = D;\n});","map":null,"metadata":{},"sourceType":"script"}