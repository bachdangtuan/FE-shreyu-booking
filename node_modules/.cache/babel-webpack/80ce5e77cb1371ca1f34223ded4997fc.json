{"ast":null,"code":"import { __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Injectable, Input, Type, HostBinding, Directive, ViewContainerRef, ComponentFactoryResolver, ViewChild, Component, forwardRef, EventEmitter, ContentChildren, QueryList, Output, NgModule } from '@angular/core';\nimport { Subject, of, isObservable } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction NgWizardStepComponent_ng_template_2_Template(rf, ctx) {}\nconst _c0 = [\"*\"];\nfunction NgWizardComponent_li_2_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_li_2_a_1_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const step_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6._showSelectedStep($event, step_r3);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelement(2, \"br\");\n    ɵngcc0.ɵɵelementStart(3, \"small\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    const i_r4 = ctx_r9.index;\n    const step_r3 = ctx_r9.$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate1(\"href\", \"#step-\", i_r4, \"\", ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(step_r3.title);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(step_r3.description);\n  }\n}\nfunction NgWizardComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 5);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_li_2_a_1_Template, 5, 3, \"a\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r3 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._getStepCssClass(step_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r3.isHidden);\n  }\n}\nfunction NgWizardComponent_div_3_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_2_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13._showPreviousStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r10.styles.previousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10.config.lang.previous);\n  }\n}\nfunction NgWizardComponent_div_3_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_3_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15._showNextStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r11.styles.nextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.config.lang.next);\n  }\n}\nfunction NgWizardComponent_div_3_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_div_4_button_1_Template_button_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r21);\n      const button_r18 = restoredCtx.$implicit;\n      const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r20._extraButtonClicked(button_r18);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r18 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", button_r18.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(button_r18.text);\n  }\n}\nfunction NgWizardComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_3_div_4_button_1_Template, 2, 2, \"button\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r12.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\nfunction NgWizardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_3_button_2_Template, 2, 2, \"button\", 9);\n    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_button_3_Template, 2, 2, \"button\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_3_div_4_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.styles.toolbarTop);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showPreviousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showNextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showExtraButtons);\n  }\n}\nfunction NgWizardComponent_div_6_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_2_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      const ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r25._showPreviousStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r22.styles.previousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r22.config.lang.previous);\n  }\n}\nfunction NgWizardComponent_div_6_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_3_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r27._showNextStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r23.styles.nextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r23.config.lang.next);\n  }\n}\nfunction NgWizardComponent_div_6_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_div_4_button_1_Template_button_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r33);\n      const button_r30 = restoredCtx.$implicit;\n      const ctx_r32 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r32._extraButtonClicked(button_r30);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r30 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", button_r30.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(button_r30.text);\n  }\n}\nfunction NgWizardComponent_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_6_div_4_button_1_Template, 2, 2, \"button\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r24.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\nfunction NgWizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_6_button_2_Template, 2, 2, \"button\", 9);\n    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_6_button_3_Template, 2, 2, \"button\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_6_div_4_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.styles.toolbarBottom);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showPreviousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showNextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showExtraButtons);\n  }\n}\nvar TOOLBAR_POSITION = /*#__PURE__*/(() => {\n  (function (TOOLBAR_POSITION) {\n    TOOLBAR_POSITION[\"none\"] = \"none\";\n    TOOLBAR_POSITION[\"top\"] = \"top\";\n    TOOLBAR_POSITION[\"bottom\"] = \"bottom\";\n    TOOLBAR_POSITION[\"both\"] = \"both\";\n  })(TOOLBAR_POSITION || (TOOLBAR_POSITION = {}));\n  return TOOLBAR_POSITION;\n})();\nvar TOOLBAR_BUTTON_POSITION = /*#__PURE__*/(() => {\n  (function (TOOLBAR_BUTTON_POSITION) {\n    TOOLBAR_BUTTON_POSITION[\"start\"] = \"start\";\n    TOOLBAR_BUTTON_POSITION[\"end\"] = \"end\";\n  })(TOOLBAR_BUTTON_POSITION || (TOOLBAR_BUTTON_POSITION = {}));\n  return TOOLBAR_BUTTON_POSITION;\n})();\n// export enum TRANSITION_EFFECT {\n//     none = 'none',\n//     slide = 'slide',\n//     fade = 'fade'\n// }\nvar THEME = /*#__PURE__*/(() => {\n  (function (THEME) {\n    THEME[\"default\"] = \"default\";\n    THEME[\"arrows\"] = \"arrows\";\n    THEME[\"circles\"] = \"circles\";\n    THEME[\"dots\"] = \"dots\";\n  })(THEME || (THEME = {}));\n  return THEME;\n})();\nvar STEP_STATE = /*#__PURE__*/(() => {\n  (function (STEP_STATE) {\n    STEP_STATE[\"normal\"] = \"normal\";\n    STEP_STATE[\"disabled\"] = \"disabled\";\n    STEP_STATE[\"error\"] = \"error\";\n    STEP_STATE[\"hidden\"] = \"hidden\";\n  })(STEP_STATE || (STEP_STATE = {}));\n  return STEP_STATE;\n})();\nvar STEP_STATUS = /*#__PURE__*/(() => {\n  (function (STEP_STATUS) {\n    STEP_STATUS[\"untouched\"] = \"untouched\";\n    STEP_STATUS[\"done\"] = \"done\";\n    STEP_STATUS[\"active\"] = \"active\";\n  })(STEP_STATUS || (STEP_STATUS = {}));\n  return STEP_STATUS;\n})();\nvar STEP_DIRECTIN = /*#__PURE__*/(() => {\n  (function (STEP_DIRECTIN) {\n    STEP_DIRECTIN[\"forward\"] = \"forward\";\n    STEP_DIRECTIN[\"backward\"] = \"backward\";\n  })(STEP_DIRECTIN || (STEP_DIRECTIN = {}));\n  return STEP_DIRECTIN;\n})();\nvar STEP_POSITION = /*#__PURE__*/(() => {\n  (function (STEP_POSITION) {\n    STEP_POSITION[\"first\"] = \"first\";\n    STEP_POSITION[\"final\"] = \"final\";\n    STEP_POSITION[\"middle\"] = \"middle\";\n  })(STEP_POSITION || (STEP_POSITION = {}));\n  return STEP_POSITION;\n})();\nconst DEFAULT_CONFIG = {\n  selected: 0,\n  keyNavigation: true,\n  cycleSteps: false,\n  lang: {\n    next: 'Next',\n    previous: 'Previous'\n  },\n  toolbarSettings: {\n    toolbarPosition: TOOLBAR_POSITION.bottom,\n    toolbarButtonPosition: TOOLBAR_BUTTON_POSITION.end,\n    showNextButton: true,\n    showPreviousButton: true,\n    toolbarExtraButtons: []\n  },\n  anchorSettings: {\n    anchorClickable: true,\n    enableAllAnchors: false,\n    markDoneStep: true,\n    markAllPreviousStepsAsDone: true,\n    removeDoneStepOnNavigateBack: false,\n    enableAnchorOnDoneStep: true\n  },\n  theme: THEME.default\n};\nconst NG_WIZARD_CONFIG_TOKEN = new InjectionToken('ngWizardCustom.config');\n\n// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6\n// Merge a `source` object to a `target` recursively\nfunction merge(target, source) {\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n  for (let key of Object.keys(source)) {\n    if (source[key] instanceof Object && key in target) {\n      Object.assign(source[key], merge(target[key], source[key]));\n    }\n  }\n  // Join `target` and modified `source`\n  Object.assign(target || {}, source);\n  return target;\n}\nlet NgWizardDataService = /*#__PURE__*/(() => {\n  let NgWizardDataService = class NgWizardDataService {\n    constructor(config) {\n      this.config = config;\n      this._defaultConfig = Object.assign({}, DEFAULT_CONFIG);\n      if (this.config) {\n        this._defaultConfig = merge(this._defaultConfig, this.config);\n      }\n      // Observable sources\n      this._resetWizard = new Subject();\n      this._showNextStep = new Subject();\n      this._showPreviousStep = new Subject();\n      this._showStep = new Subject();\n      this._setTheme = new Subject();\n      this._stepChangedArgs = new Subject();\n      // Observable streams\n      this.resetWizard$ = this._resetWizard.asObservable();\n      this.showNextStep$ = this._showNextStep.asObservable();\n      this.showPreviousStep$ = this._showPreviousStep.asObservable();\n      this.showStep$ = this._showStep.asObservable();\n      this.setTheme$ = this._setTheme.asObservable();\n      this.stepChangedArgs$ = this._stepChangedArgs.asObservable();\n    }\n    getDefaultConfig() {\n      return Object.assign({}, this._defaultConfig);\n    }\n    resetWizard() {\n      this._resetWizard.next();\n    }\n    showNextStep() {\n      this._showNextStep.next();\n    }\n    showPreviousStep() {\n      this._showPreviousStep.next();\n    }\n    showStep(index) {\n      this._showStep.next(index);\n    }\n    setTheme(theme) {\n      this._setTheme.next(theme);\n    }\n    stepChanged(args) {\n      this._stepChangedArgs.next(args);\n    }\n  };\n  NgWizardDataService.ɵfac = function NgWizardDataService_Factory(t) {\n    return new (t || NgWizardDataService)(ɵngcc0.ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8));\n  };\n  NgWizardDataService.ɵprov = ɵɵdefineInjectable({\n    factory: function NgWizardDataService_Factory() {\n      return new NgWizardDataService(ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8));\n    },\n    token: NgWizardDataService,\n    providedIn: \"root\"\n  });\n  NgWizardDataService = __decorate([__param(0, Optional()), __param(0, Inject(NG_WIZARD_CONFIG_TOKEN)), __metadata(\"design:paramtypes\", [Object])], NgWizardDataService);\n  return NgWizardDataService;\n})();\nlet NgWizardService = /*#__PURE__*/(() => {\n  let NgWizardService = class NgWizardService {\n    constructor(ngWizardDataService) {\n      this.ngWizardDataService = ngWizardDataService;\n    }\n    reset() {\n      this.ngWizardDataService.resetWizard();\n    }\n    next() {\n      this.ngWizardDataService.showNextStep();\n    }\n    previous() {\n      this.ngWizardDataService.showPreviousStep();\n    }\n    show(index) {\n      this.ngWizardDataService.showStep(index);\n    }\n    theme(theme) {\n      this.ngWizardDataService.setTheme(theme);\n    }\n    stepChanged() {\n      return this.ngWizardDataService.stepChangedArgs$;\n    }\n  };\n  NgWizardService.ɵfac = function NgWizardService_Factory(t) {\n    return new (t || NgWizardService)(ɵngcc0.ɵɵinject(NgWizardDataService));\n  };\n  NgWizardService.ɵprov = ɵɵdefineInjectable({\n    factory: function NgWizardService_Factory() {\n      return new NgWizardService(ɵɵinject(NgWizardDataService));\n    },\n    token: NgWizardService,\n    providedIn: \"root\"\n  });\n  NgWizardService = __decorate([__metadata(\"design:paramtypes\", [NgWizardDataService])], NgWizardService);\n  return NgWizardService;\n})();\nlet NgWizardStep = /*#__PURE__*/(() => {\n  let NgWizardStep = class NgWizardStep {\n    get hidden() {\n      return this.status != STEP_STATUS.active;\n    }\n  };\n  NgWizardStep.ɵfac = function NgWizardStep_Factory(t) {\n    return new (t || NgWizardStep)();\n  };\n  NgWizardStep.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgWizardStep,\n    hostVars: 1,\n    hostBindings: function NgWizardStep_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"hidden\", ctx.hidden);\n      }\n    },\n    inputs: {\n      title: \"title\",\n      description: \"description\",\n      state: \"state\",\n      component: \"component\",\n      canEnter: \"canEnter\",\n      canExit: \"canExit\"\n    }\n  });\n  __decorate([Input(), __metadata(\"design:type\", String)], NgWizardStep.prototype, \"title\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], NgWizardStep.prototype, \"description\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], NgWizardStep.prototype, \"state\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Type)], NgWizardStep.prototype, \"component\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgWizardStep.prototype, \"canEnter\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgWizardStep.prototype, \"canExit\", void 0);\n  __decorate([HostBinding('hidden'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], NgWizardStep.prototype, \"hidden\", null);\n  return NgWizardStep;\n})();\nlet NgWizardStepContentDirective = /*#__PURE__*/(() => {\n  let NgWizardStepContentDirective = class NgWizardStepContentDirective {\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n  };\n  NgWizardStepContentDirective.ɵfac = function NgWizardStepContentDirective_Factory(t) {\n    return new (t || NgWizardStepContentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n  };\n  NgWizardStepContentDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgWizardStepContentDirective,\n    selectors: [[\"\", \"ngWizardStepContent\", \"\"]]\n  });\n  NgWizardStepContentDirective = __decorate([__metadata(\"design:paramtypes\", [ViewContainerRef])], NgWizardStepContentDirective);\n  return NgWizardStepContentDirective;\n})();\nvar NgWizardStepComponent_1;\nlet NgWizardStepComponent = NgWizardStepComponent_1 = class NgWizardStepComponent extends NgWizardStep {\n  constructor(componentFactoryResolver) {\n    super();\n    this.componentFactoryResolver = componentFactoryResolver;\n  }\n  ngOnInit() {\n    this.loadComponent();\n  }\n  loadComponent() {\n    if (!this.component) {\n      return;\n    }\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\n    this.stepContent.viewContainerRef.clear();\n    this.componentRef = this.stepContent.viewContainerRef.createComponent(componentFactory);\n  }\n  get isHidden() {\n    return this.state == STEP_STATE.hidden;\n  }\n};\nNgWizardStepComponent.ɵfac = function NgWizardStepComponent_Factory(t) {\n  return new (t || NgWizardStepComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n};\nNgWizardStepComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgWizardStepComponent,\n  selectors: [[\"ng-wizard-step\"]],\n  viewQuery: function NgWizardStepComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NgWizardStepContentDirective, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepContent = _t.first);\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NgWizardStep,\n    useExisting: forwardRef(() => NgWizardStepComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"tab-pane\", \"step-content\", 2, \"display\", \"block\"], [\"ngWizardStepContent\", \"\"]],\n  template: function NgWizardStepComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵtemplate(2, NgWizardStepComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  directives: [NgWizardStepContentDirective],\n  styles: [\"\"]\n});\nNgWizardStepComponent.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}];\n__decorate([ViewChild(NgWizardStepContentDirective, {\n  static: true\n}), __metadata(\"design:type\", NgWizardStepContentDirective)], NgWizardStepComponent.prototype, \"stepContent\", void 0);\nNgWizardStepComponent = NgWizardStepComponent_1 = __decorate([__metadata(\"design:paramtypes\", [ComponentFactoryResolver])], NgWizardStepComponent);\nlet NgWizardComponent = /*#__PURE__*/(() => {\n  let NgWizardComponent = class NgWizardComponent {\n    constructor(ngWizardDataService) {\n      this.ngWizardDataService = ngWizardDataService;\n      this.stepChanged = new EventEmitter();\n      this.themeChanged = new EventEmitter();\n      this.reseted = new EventEmitter();\n      this.styles = {};\n      this.showToolbarTop = false;\n      this.showPreviousButton = false;\n      this.showNextButton = false;\n      this.showToolbarBottom = false;\n      this.showExtraButtons = false;\n      this.currentStepIndex = null; // Active step index\n    }\n\n    get pConfig() {\n      return this._pConfig || {};\n    }\n    set pConfig(config) {\n      this._pConfig = config;\n    }\n    ngAfterContentInit() {\n      this._backupStepStates();\n      this._init();\n      // Set toolbar\n      this._setToolbar();\n      // Assign plugin events\n      this._setEvents();\n      this.resetWizardWatcher = this.ngWizardDataService.resetWizard$.subscribe(() => this._reset());\n      this.showNextStepWatcher = this.ngWizardDataService.showNextStep$.subscribe(() => this._showNextStep());\n      this.showPreviousStepWatcher = this.ngWizardDataService.showPreviousStep$.subscribe(() => this._showPreviousStep());\n      this.showStepWatcher = this.ngWizardDataService.showStep$.subscribe(index => this._showStep(index));\n      this.setThemeWatcher = this.ngWizardDataService.setTheme$.subscribe(theme => this._setTheme(theme));\n    }\n    _init() {\n      // set config\n      let defaultConfig = this.ngWizardDataService.getDefaultConfig();\n      this.config = merge(defaultConfig, this.pConfig);\n      // set step states\n      this._initSteps();\n      // Set the elements\n      this._initStyles();\n      // Show the initial step\n      this._showStep(this.config.selected);\n    }\n    _initSteps() {\n      this.steps.forEach((step, index) => {\n        step.index = index;\n        step.status = step.status || STEP_STATUS.untouched;\n        step.state = step.state || STEP_STATE.normal;\n      });\n      // Mark previous steps of the active step as done\n      if (this.config.selected > 0 && this.config.anchorSettings.markDoneStep && this.config.anchorSettings.markAllPreviousStepsAsDone) {\n        this.steps.forEach(step => {\n          if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {\n            step.status = step.index < this.config.selected ? STEP_STATUS.done : step.status;\n          }\n        });\n      }\n    }\n    _backupStepStates() {\n      this.steps.forEach(step => {\n        step.initialStatus = step.status;\n        step.initialState = step.state;\n      });\n    }\n    _restoreStepStates() {\n      this.steps.forEach(step => {\n        step.status = step.initialStatus;\n        step.state = step.initialState;\n      });\n    }\n    // PRIVATE FUNCTIONS\n    _initStyles() {\n      // Set the main element\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n      // Set anchor elements\n      this.styles.step = 'nav-item'; // li\n      // Make the anchor clickable\n      if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n        this.styles.step += ' clickable';\n      }\n      // Set the toolbar styles\n      this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n      this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n      // Set previous&next buttons \n      this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n      this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n    }\n    _setToolbar() {\n      this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n      this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n      this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;\n      this.showNextButton = this.config.toolbarSettings.showNextButton;\n      this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;\n    }\n    _setEvents() {\n      //TODO: keyNavigation\n      // Keyboard navigation event\n      if (this.config.keyNavigation) {\n        // $(document).keyup(function (e) {\n        //   mi._keyNav(e);\n        // });\n      }\n    }\n    _getStepCssClass(selectedStep) {\n      let stepClass = this.styles.step;\n      switch (selectedStep.state) {\n        case STEP_STATE.disabled:\n          stepClass += ' disabled';\n          break;\n        case STEP_STATE.error:\n          stepClass += ' danger';\n          break;\n        case STEP_STATE.hidden:\n          stepClass += ' hidden';\n          break;\n      }\n      switch (selectedStep.status) {\n        case STEP_STATUS.done:\n          stepClass += ' done';\n          break;\n        case STEP_STATUS.active:\n          stepClass += ' active';\n          break;\n      }\n      return stepClass;\n    }\n    _showSelectedStep(event, selectedStep) {\n      event.preventDefault();\n      if (!this.config.anchorSettings.anchorClickable) {\n        return;\n      }\n      if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {\n        return true;\n      }\n      if (selectedStep.index != this.currentStepIndex) {\n        if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n          this._showStep(selectedStep.index);\n        } else {\n          if (selectedStep.status == STEP_STATUS.done) {\n            this._showStep(selectedStep.index);\n          }\n        }\n      }\n    }\n    _showNextStep(event) {\n      if (event) {\n        event.preventDefault();\n      }\n      // Find the next not disabled & hidden step\n      let filteredSteps = this.steps.filter(step => {\n        return step.index > (this.currentStepIndex == null ? -1 : this.currentStepIndex) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n      });\n      if (filteredSteps.length == 0) {\n        if (!this.config.cycleSteps) {\n          return;\n        }\n        this._showStep(0);\n      } else {\n        this._showStep(filteredSteps.shift().index);\n      }\n    }\n    _showPreviousStep(event) {\n      if (event) {\n        event.preventDefault();\n      }\n      // Find the previous not disabled & hidden step\n      let filteredSteps = this.steps.filter(step => {\n        return step.index < (this.currentStepIndex == null && this.config.cycleSteps ? this.steps.length : this.currentStepIndex) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n      });\n      if (filteredSteps.length == 0) {\n        if (!this.config.cycleSteps) {\n          return;\n        }\n        this._showStep(this.steps.length - 1);\n      } else {\n        this._showStep(filteredSteps.pop().index);\n      }\n    }\n    _showStep(selectedStepIndex) {\n      // If step not found, skip\n      if (selectedStepIndex >= this.steps.length || selectedStepIndex < 0) {\n        return;\n      }\n      // If current step is requested again, skip\n      if (selectedStepIndex == this.currentStepIndex) {\n        return;\n      }\n      let selectedStep = this.steps.toArray()[selectedStepIndex];\n      // If it is a disabled or hidden step, skip\n      if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {\n        return;\n      }\n      this._showLoader();\n      return this._isStepChangeValid(selectedStep, this.currentStep && this.currentStep.canExit).toPromise().then(isValid => {\n        if (isValid) {\n          return this._isStepChangeValid(selectedStep, selectedStep.canEnter).toPromise();\n        }\n        return of(isValid).toPromise();\n      }).then(isValid => {\n        if (isValid) {\n          // Load step content\n          this._loadStepContent(selectedStep);\n        }\n      }).finally(() => this._hideLoader());\n    }\n    _isStepChangeValid(selectedStep, condition) {\n      if (typeof condition === typeof true) {\n        return of(condition);\n      } else if (condition instanceof Function) {\n        let direction = this._getStepDirection(selectedStep.index);\n        let result = condition({\n          direction: direction,\n          fromStep: this.currentStep,\n          toStep: selectedStep\n        });\n        if (isObservable(result)) {\n          return result;\n        } else if (typeof result === typeof true) {\n          return of(result);\n        } else {\n          return of(false);\n        }\n      }\n      return of(true);\n    }\n    _loadStepContent(selectedStep) {\n      // Update controls\n      this._setAnchor(selectedStep);\n      // Set the buttons based on the step\n      this._setButtons(selectedStep.index);\n      // Trigger \"stepChanged\" event\n      const args = {\n        step: selectedStep,\n        previousStep: this.currentStep,\n        direction: this._getStepDirection(selectedStep.index),\n        position: this._getStepPosition(selectedStep.index)\n      };\n      this.stepChanged.emit(args);\n      this.ngWizardDataService.stepChanged(args);\n      // Update the current index\n      this.currentStepIndex = selectedStep.index;\n      this.currentStep = selectedStep;\n    }\n    _setAnchor(selectedStep) {\n      // Current step anchor > Remove other classes and add done class\n      if (this.currentStep) {\n        this.currentStep.status = STEP_STATUS.untouched;\n        if (this.config.anchorSettings.markDoneStep) {\n          this.currentStep.status = STEP_STATUS.done;\n          if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {\n            this.steps.forEach(step => {\n              if (step.index > selectedStep.index) {\n                step.status = STEP_STATUS.untouched;\n              }\n            });\n          }\n        }\n      }\n      // Next step anchor > Remove other classes and add active class\n      selectedStep.status = STEP_STATUS.active;\n    }\n    _setButtons(index) {\n      // Previous/Next Button enable/disable based on step\n      if (!this.config.cycleSteps) {\n        if (0 >= index) {\n          this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';\n        } else {\n          this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n        }\n        if (this.steps.length - 1 <= index) {\n          this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';\n        } else {\n          this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n        }\n      }\n    }\n    _extraButtonClicked(button) {\n      if (button.event) {\n        button.event();\n      }\n    }\n    // HELPER FUNCTIONS\n    _keyNav(event) {\n      // Keyboard navigation\n      switch (event.which) {\n        case 37:\n          // left\n          this._showPreviousStep(event);\n          event.preventDefault();\n          break;\n        case 39:\n          // right\n          this._showNextStep(event);\n          event.preventDefault();\n          break;\n        default:\n          return;\n        // exit this handler for other keys\n      }\n    }\n\n    _showLoader() {\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';\n    }\n    _hideLoader() {\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n    }\n    _getStepDirection(selectedStepIndex) {\n      return this.currentStepIndex != null && this.currentStepIndex != selectedStepIndex ? this.currentStepIndex < selectedStepIndex ? STEP_DIRECTIN.forward : STEP_DIRECTIN.backward : null;\n    }\n    _getStepPosition(selectedStepIndex) {\n      return selectedStepIndex == 0 ? STEP_POSITION.first : selectedStepIndex == this.steps.length - 1 ? STEP_POSITION.final : STEP_POSITION.middle;\n    }\n    // PUBLIC FUNCTIONS\n    _setTheme(theme) {\n      if (this.config.theme == theme) {\n        return false;\n      }\n      this.config.theme = theme;\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n      // Trigger \"themeChanged\" event\n      this.themeChanged.emit(this.config.theme);\n    }\n    _reset() {\n      // Reset all elements and classes\n      this.currentStepIndex = null;\n      this.currentStep = null;\n      this._restoreStepStates();\n      this._init();\n      // Trigger \"reseted\" event\n      this.reseted.emit();\n    }\n    ngOnDestroy() {\n      if (this.resetWizardWatcher) {\n        this.resetWizardWatcher.unsubscribe();\n      }\n      if (this.showNextStepWatcher) {\n        this.showNextStepWatcher.unsubscribe();\n      }\n      if (this.showPreviousStepWatcher) {\n        this.showPreviousStepWatcher.unsubscribe();\n      }\n      if (this.showStepWatcher) {\n        this.showStepWatcher.unsubscribe();\n      }\n      if (this.setThemeWatcher) {\n        this.setThemeWatcher.unsubscribe();\n      }\n    }\n  };\n  NgWizardComponent.ɵfac = function NgWizardComponent_Factory(t) {\n    return new (t || NgWizardComponent)(ɵngcc0.ɵɵdirectiveInject(NgWizardDataService));\n  };\n  NgWizardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgWizardComponent,\n    selectors: [[\"ng-wizard\"]],\n    contentQueries: function NgWizardComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgWizardStep, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.steps = _t);\n      }\n    },\n    inputs: {\n      pConfig: [\"config\", \"pConfig\"]\n    },\n    outputs: {\n      stepChanged: \"stepChanged\",\n      themeChanged: \"themeChanged\",\n      reseted: \"reseted\"\n    },\n    ngContentSelectors: _c0,\n    decls: 7,\n    vars: 4,\n    consts: [[\"id\", \"ngwizard\", 3, \"ngClass\"], [1, \"nav\", \"nav-tabs\", \"step-anchor\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-wizard-container\", \"tab-content\"], [3, \"ngClass\"], [\"class\", \"nav-link\", 3, \"href\", \"click\", 4, \"ngIf\"], [1, \"nav-link\", 3, \"href\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"btn-group mr-2 ng-wizard-btn-group-extra\", \"role\", \"group\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group-extra\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function NgWizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"ul\", 1);\n        ɵngcc0.ɵɵtemplate(2, NgWizardComponent_li_2_Template, 2, 2, \"li\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_Template, 5, 4, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, NgWizardComponent_div_6_Template, 5, 4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.styles.main);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToolbarTop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToolbarBottom);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf],\n    styles: [\"\"]\n  });\n  __decorate([ContentChildren(NgWizardStep), __metadata(\"design:type\", QueryList)], NgWizardComponent.prototype, \"steps\", void 0);\n  __decorate([Input('config'), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], NgWizardComponent.prototype, \"pConfig\", null);\n  __decorate([Output(), __metadata(\"design:type\", Object)], NgWizardComponent.prototype, \"stepChanged\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", Object)], NgWizardComponent.prototype, \"themeChanged\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", Object)], NgWizardComponent.prototype, \"reseted\", void 0);\n  NgWizardComponent = __decorate([__metadata(\"design:paramtypes\", [NgWizardDataService])], NgWizardComponent);\n  return NgWizardComponent;\n})();\nvar NgWizardModule_1;\nlet NgWizardModule = NgWizardModule_1 = class NgWizardModule {\n  /**\r\n   * forRoot\r\n   * @returns A module with its provider dependencies\r\n   */\n  static forRoot(ngWizardConfig) {\n    return {\n      ngModule: NgWizardModule_1,\n      providers: [{\n        provide: NG_WIZARD_CONFIG_TOKEN,\n        useValue: ngWizardConfig\n      }]\n    };\n  }\n};\nNgWizardModule.ɵfac = function NgWizardModule_Factory(t) {\n  return new (t || NgWizardModule)();\n};\nNgWizardModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgWizardModule\n});\nNgWizardModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgWizardModule, {\n    declarations: function () {\n      return [NgWizardComponent, NgWizardStepComponent, NgWizardStepContentDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgWizardComponent, NgWizardStepComponent];\n    }\n  });\n})();\n\n/*\r\n * Public API Surface of ng-wizard\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgWizardComponent, NgWizardModule, NgWizardService, NgWizardStep, NgWizardStepComponent, STEP_DIRECTIN, STEP_POSITION, STEP_STATE, THEME, TOOLBAR_BUTTON_POSITION, TOOLBAR_POSITION, NgWizardDataService as ɵa, NG_WIZARD_CONFIG_TOKEN as ɵb, NgWizardStepContentDirective as ɵc };\n\n//# sourceMappingURL=ng-wizard.js.map","map":null,"metadata":{},"sourceType":"module"}