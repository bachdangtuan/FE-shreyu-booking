import { FormGroup } from '@angular/forms';
import { Router } from '@angular/router';
import { BindQueryParamsOptions, QueryDefOptions, SyncDefsOptions } from './types';
import { QueryParamDef } from './QueryParamDef';
export declare class BindQueryParamsManager<T = any> {
    private router;
    private options;
    private createOptions?;
    private defs;
    private group;
    private $destroy;
    private defsSynced;
    connect(group: FormGroup): this;
    constructor(router: Router, defs: QueryDefOptions<T>[] | QueryDefOptions<T>, options: BindQueryParamsOptions, createOptions?: Pick<QueryDefOptions<any>, "syncInitialControlValue" | "syncInitialQueryParamValue"> | undefined);
    onInit(): void;
    destroy(): void;
    getDef(queryKey: keyof T): QueryParamDef<T> | undefined;
    parse(queryParams: Partial<T>): Record<string, unknown>;
    syncAllDefs(options?: SyncDefsOptions): void;
    syncDefs(queryKeys: (keyof T & string) | (keyof T & string)[], options?: SyncDefsOptions): void;
    paramExists(queryKey: keyof T): boolean;
    someParamExists(): boolean;
    get search(): URLSearchParams;
    private handleInitialURLSync;
    private updateQueryParams;
    private updateControl;
}
