import { Inject, Injectable } from '@angular/core';
import { BindQueryParamsManager } from './BindQueryParamsManager';
import { BIND_QUERY_PARAMS_OPTIONS } from './options';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export class BindQueryParamsFactory {
    constructor(router, options) {
        this.router = router;
        this.options = options;
    }
    create(defs, createOptions) {
        return new BindQueryParamsManager(this.router, defs, this.options, createOptions);
    }
}
BindQueryParamsFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: BindQueryParamsFactory, deps: [{ token: i1.Router }, { token: BIND_QUERY_PARAMS_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });
BindQueryParamsFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: BindQueryParamsFactory, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: BindQueryParamsFactory, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [BIND_QUERY_PARAMS_OPTIONS]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmluZFF1ZXJ5UGFyYW1zRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nbmVhdC9iaW5kLXF1ZXJ5LXBhcmFtcy9zcmMvbGliL0JpbmRRdWVyeVBhcmFtc0ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sV0FBVyxDQUFDOzs7QUFJdEQsTUFBTSxPQUFPLHNCQUFzQjtJQUNqQyxZQUFvQixNQUFjLEVBQTZDLE9BQStCO1FBQTFGLFdBQU0sR0FBTixNQUFNLENBQVE7UUFBNkMsWUFBTyxHQUFQLE9BQU8sQ0FBd0I7SUFBRyxDQUFDO0lBRWxILE1BQU0sQ0FDSixJQUErQyxFQUMvQyxhQUErRjtRQUUvRixPQUFPLElBQUksc0JBQXNCLENBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FBQztJQUN2RixDQUFDOzttSEFSVSxzQkFBc0Isd0NBQ1cseUJBQXlCO3VIQUQxRCxzQkFBc0IsY0FEVCxNQUFNOzJGQUNuQixzQkFBc0I7a0JBRGxDLFVBQVU7bUJBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzswQkFFSyxNQUFNOzJCQUFDLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJpbmRRdWVyeVBhcmFtc01hbmFnZXIgfSBmcm9tICcuL0JpbmRRdWVyeVBhcmFtc01hbmFnZXInO1xuaW1wb3J0IHsgQklORF9RVUVSWV9QQVJBTVNfT1BUSU9OUyB9IGZyb20gJy4vb3B0aW9ucyc7XG5pbXBvcnQgeyBCaW5kUXVlcnlQYXJhbXNPcHRpb25zLCBRdWVyeURlZk9wdGlvbnMgfSBmcm9tICcuL3R5cGVzJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBCaW5kUXVlcnlQYXJhbXNGYWN0b3J5IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgQEluamVjdChCSU5EX1FVRVJZX1BBUkFNU19PUFRJT05TKSBwcml2YXRlIG9wdGlvbnM6IEJpbmRRdWVyeVBhcmFtc09wdGlvbnMpIHt9XG5cbiAgY3JlYXRlPFQ+KFxuICAgIGRlZnM6IFF1ZXJ5RGVmT3B0aW9uczxUPltdIHwgUXVlcnlEZWZPcHRpb25zPFQ+LFxuICAgIGNyZWF0ZU9wdGlvbnM/OiBQaWNrPFF1ZXJ5RGVmT3B0aW9ucywgJ3N5bmNJbml0aWFsQ29udHJvbFZhbHVlJyB8ICdzeW5jSW5pdGlhbFF1ZXJ5UGFyYW1WYWx1ZSc+XG4gICk6IEJpbmRRdWVyeVBhcmFtc01hbmFnZXI8VD4ge1xuICAgIHJldHVybiBuZXcgQmluZFF1ZXJ5UGFyYW1zTWFuYWdlcjxUPih0aGlzLnJvdXRlciwgZGVmcywgdGhpcy5vcHRpb25zLCBjcmVhdGVPcHRpb25zKTtcbiAgfVxufVxuIl19